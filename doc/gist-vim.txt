*Gist.vim* Vimscript for creating gists (http://gist.github.com)

Usage                                          |vim-gist-usage|
Tips                                           |vim-gist-tips|
License                                        |vim-gist-license|
Install                                        |vim-gist-install|
Requirements                                   |vim-gist-requirements|
Setup                                          |vim-gist-setup|
FAQ                                            |vim-gist-faq|

This is a vimscript for creating gists (http://gist.github.com)

For the latest version please see https://github.com/mattn/vim-gist.

==============================================================================
USAGE                                                 *:Gist* *vim-gist-usage*

- Post current buffer to gist, using default privacy option. >

    :Gist
<
- Post selected text to gist, using default privacy option.
  This applies to all permutations listed below (except multi). >

    :'<,'>Gist
<
- Create a private gist. >

    :Gist -p
    :Gist --private
<
- Create a public gist.
  (Only relevant if you've set gists to be private by default.) >

    :Gist -P
    :Gist --public
<
- Post whole text to gist as public.
  This is only relevant if you've set gists to be private by default.
>
    :Gist -P
<
- Create a gist anonymously. >

    :Gist -a
    :Gist --anonymous
<
- Create a gist with all open buffers. >

    :Gist -m
    :Gist --multibuffer
<
- Edit the gist (you need to have opened the gist buffer first).
  You can update the gist with the {:w} command within the gist buffer. >

    :Gist -e
    :Gist --edit
<
- Edit the gist with name "foo.js" (you need to have opened the gist buffer
  first). >

    :Gist -e foo.js
<
- Post/Edit with the description " (you need to have opened the gist buffer
  first). >

    :Gist -s something
    :Gist --description something
    :Gist -e -s something
<
- Delete the gist (you need to have opened the gist buffer first).
  Password authentication is needed. >

    :Gist -d
    :Gist --delete
<
- Fork the gist (you need to have opened the gist buffer first).
  Password authentication is needed. >

    :Gist -f
    :Gist --fork
<
- Star the gist (you need to have opened the gist buffer first).
  Password authentication is needed.
>
    :Gist +1
<
- Unstar the gist (you need to have opened the gist buffer first).
  Password authentication is needed.
>
    :Gist -1
<
- Get gist XXXXX. >

    :Gist XXXXX
<
- Get gist XXXXX and add to clipboard. >

    :Gist -c XXXXX
<
- List your public gists. >

    :Gist -l
    :Gist --list
    :Gist -l -n 100
    :Gist --list --per-page 100
<
- List gists from user "mattn". >

    :Gist -l mattn
<
- List everyone's gists. >

    :Gist -la
    :Gist --listall
<
- List gists from your starred gists.
>
    :Gist -ls
    :Gist --liststar

- While the gist list is visible, the following mappings apply:

  - 'o' or 'Enter' will open the selected gist file in a new buffer
    and close the vim-gist listing split.
  - 'b' will open the selected gist file in a browser. If you are in
    GUI vim you can also achieve this by pressing 'Shift-Enter'.
  - 'y' will copy the contents of the selected gist to the clipboard,
    and close the vim-gist listing split.
  - 'p' will (copy and) paste the contents of the selected gist to the
    buffer from which vim-gist was called, and close the vim-gist
    listing split.
  - 'Esc' will close the vim-gist listing split without performing any
    further action.

- Open the gist on browser after you post or update it.
>
    :Gist -b
    :Gist --browser
<
- Post as new gist after editing on the buffer.
>
    :Gist!
<
==============================================================================
TIPS                                                           *vim-gist-tips*

If you set "g:gist_clip_command", gist.vim will copy the gist code with option
"-c".

  - Mac: >
    let g:gist_clip_command = 'pbcopy'
<
  - Linux: >
    let g:gist_clip_command = 'xclip -selection clipboard'
<
  - Others (cygwin?): >
    let g:gist_clip_command = 'putclip'
<
If you want to detect filetype from the filename: >

    let g:gist_detect_filetype = 1
<
If you want to open the browser after the post: >

    let g:gist_open_browser_after_post = 1
<
If you want to change the browser: >

    let g:gist_browser_command = 'w3m %URL%'
<
o